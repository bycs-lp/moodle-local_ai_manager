{"version":3,"file":"userquota.min.js","sources":["../src/userquota.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module handling the form submission of the statistics tables of local_ai_manager.\n *\n * @module     local_ai_manager/userquota\n * @copyright  2024 ISB Bayern\n * @author     Philipp Memmel\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\nimport Templates from 'core/templates';\n\nconst constants = {\n    MAXUSAGE_UNLIMITED: 999999\n};\n\nconst fetchUserquotaData = () => fetchMany([{\n    methodname: 'local_ai_manager_get_user_quota',\n    args: {},\n}])[0];\n\n/**\n * Renders the current user usage information into the element identified by the given selector.\n *\n * @param {string} selector the id of the element to insert the infobox\n * @param {string[]} purposes the purposes to show user quota for\n */\nexport const renderUserQuota = async(selector, purposes) => {\n    const targetElement = document.querySelector(selector);\n    const userquotaData = await fetchUserquotaData();\n    const purposeInfo = [];\n    purposes.forEach(purpose => {\n        // TODO convert 'UNLIMITED' to proper lang string\n        const maxusage = userquotaData.usage[purpose].maxusage === constants.MAXUSAGE_UNLIMITED ?\n            'UNLIMITED' : userquotaData.usage[purpose].maxusage;\n        purposeInfo.push({purpose, 'currentusage': userquotaData.usage[purpose].currentusage, maxusage});\n    });\n    const userquotaContentTemplateContext = {\n        purposes: purposeInfo,\n        period: userquotaData.period\n    };\n    const {html, js} = await Templates.renderForPromise('local_ai_manager/userquota', userquotaContentTemplateContext);\n    Templates.appendNodeContents(targetElement, html, js);\n};\n"],"names":["constants","async","selector","purposes","targetElement","document","querySelector","userquotaData","methodname","args","purposeInfo","forEach","purpose","maxusage","usage","push","currentusage","userquotaContentTemplateContext","period","html","js","Templates","renderForPromise","appendNodeContents"],"mappings":";;;;;;;;mLA4BMA,6BACkB,gCAcOC,MAAMC,SAAUC,kBACrCC,cAAgBC,SAASC,cAAcJ,UACvCK,oBAbuB,cAAU,CAAC,CACxCC,WAAY,kCACZC,KAAM,MACN,GAWMC,YAAc,GACpBP,SAASQ,SAAQC,gBAEPC,SAAWN,cAAcO,MAAMF,SAASC,WAAab,6BACvD,YAAcO,cAAcO,MAAMF,SAASC,SAC/CH,YAAYK,KAAK,CAACH,QAAAA,qBAAyBL,cAAcO,MAAMF,SAASI,aAAcH,SAAAA,oBAEpFI,gCAAkC,CACpCd,SAAUO,YACVQ,OAAQX,cAAcW,SAEpBC,KAACA,KAADC,GAAOA,UAAYC,mBAAUC,iBAAiB,6BAA8BL,oDACxEM,mBAAmBnB,cAAee,KAAMC"}