define("local_ai_manager/config",["exports","core/ajax","core/notification"],(function(_exports,_ajax,_notification){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getPurposeOptions=_exports.getAiInfo=_exports.getAiConfig=void 0;
/**
   * Module handling the retrieving of the ai config object.
   *
   * @module     local_ai_manager/config
   * @copyright  2024 ISB Bayern
   * @author     Philipp Memmel
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
let aiConfig=null,aiInfo=null,selectedPurposes=null;const fetchAiConfig=function(contextid){let tenant=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,purposes=arguments.length>2?arguments[2]:void 0;return(0,_ajax.call)([{methodname:"local_ai_manager_get_ai_config",args:{contextid:contextid,tenant:tenant,purposes:purposes}}])[0]},fetchAiInfo=function(){let tenant=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return(0,_ajax.call)([{methodname:"local_ai_manager_get_ai_info",args:{tenant:tenant}}])[0]};_exports.getAiConfig=async function(contextid){let tenant=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,purposes=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return null!==aiConfig&&purposes===selectedPurposes||(selectedPurposes=purposes,aiConfig=await fetchAiConfig(contextid,tenant,purposes)),aiConfig};_exports.getAiInfo=async function(){let tenant=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null===aiInfo&&(aiInfo=await fetchAiInfo(tenant)),aiInfo};_exports.getPurposeOptions=async purpose=>{let purposeOptions=null;try{purposeOptions=await(purpose=>(0,_ajax.call)([{methodname:"local_ai_manager_get_purpose_options",args:{purpose:purpose}}])[0])(purpose)}catch(exception){await(0,_notification.exception)(exception)}return purposeOptions}}));

//# sourceMappingURL=config.min.js.map