define("local_ai_manager/infobox",["exports","core/templates","core/localstorage","core/config"],(function(_exports,Templates,_localstorage,config){var obj;function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   * Module handling the form submission of the statistics tables of local_ai_manager.
   *
   * @module     local_ai_manager/infobox
   * @copyright  2024 ISB Bayern
   * @author     Philipp Memmel
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.renderInfoBox=_exports.hash=void 0,Templates=_interopRequireWildcard(Templates),_localstorage=(obj=_localstorage)&&obj.__esModule?obj:{default:obj},config=_interopRequireWildcard(config);_exports.renderInfoBox=async function(component,userId,selector){let purposes=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const targetElement=document.querySelector(selector),aiInfoUrl=new URL(config.wwwroot+"/local/ai_manager/ai_info.php");purposes.forEach((purpose=>{aiInfoUrl.searchParams.append("purposes[]",purpose)})),console.log(aiInfoUrl);const templateContext={aiinfourl:aiInfoUrl},{html:html,js:js}=await Templates.renderForPromise("local_ai_manager/infobox",templateContext);Templates.prependNodeContents(targetElement,html,js);const hashKey=await hash(userId+component),localStorageContent=_localstorage.default.get(hashKey),currentTime=(new Date).getTime();if(!localStorageContent||currentTime-localStorageContent>72e5){const date=new Date;_localstorage.default.set(hashKey,date.getTime())}};const hash=async stringToHash=>{const data=(new TextEncoder).encode(stringToHash),hashAsArrayBuffer=await window.crypto.subtle.digest("SHA-256",data),uint8ViewOfHash=new Uint8Array(hashAsArrayBuffer);return Array.from(uint8ViewOfHash).map((b=>b.toString(16).padStart(2,"0"))).join("")};_exports.hash=hash}));

//# sourceMappingURL=infobox.min.js.map