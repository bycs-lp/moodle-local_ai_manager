{"version":3,"file":"make_request.min.js","sources":["../src/make_request.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\n\nexport const init = (purpose, prompt) => {\n\n    // Nothing to do if the purpose is empty.\n    if (!purpose) {\n        return;\n    }\n\n    // Nothing to do if the prompt is empty.\n    if (!prompt) {\n        return;\n    }\n\n    return makeRequest(purpose, prompt);\n};\n\n/**\n * Call to store input value\n * @param {string} purpose\n * @param {string} prompt\n * @returns {mixed}\n */\nconst execMakeRequest = (\n    purpose,\n    prompt\n) => fetchMany([{\n    methodname: 'local_ai_manager_post_query',\n    args: {\n        purpose,\n        prompt\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {string} purpose\n * @param {string} prompt\n * @returns {string}\n */\nexport const makeRequest = async (purpose, prompt) => {\n\n    const response = await execMakeRequest(purpose, prompt);\n    if (response.code != 200) {\n        Log.error(response.string);\n    }\n    if (response.code == 200) {\n        Log.info(response.string);\n    }\n    return response.result;\n};"],"names":["purpose","prompt","makeRequest","async","response","methodname","args","execMakeRequest","code","error","string","info","result"],"mappings":"mRAGoB,CAACA,QAASC,aAGrBD,SAKAC,cAIEC,YAAYF,QAASC,eA0BnBC,YAAcC,MAAOH,QAASC,gBAEjCG,cAnBc,EACpBJ,QACAC,UACC,cAAU,CAAC,CACZI,WAAY,8BACZC,KAAM,CACFN,QAAAA,QACAC,OAAAA,WAEJ,GAUuBM,CAAgBP,QAASC,eAC3B,KAAjBG,SAASI,mBACLC,MAAML,SAASM,QAEF,KAAjBN,SAASI,mBACLG,KAAKP,SAASM,QAEfN,SAASQ"}