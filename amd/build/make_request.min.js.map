{"version":3,"file":"make_request.min.js","sources":["../src/make_request.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\nimport Log from 'core/log';\n\nexport const init = (purpose, prompt) => {\n\n    // Nothing to do if the purpose is empty.\n    if (!purpose) {\n        return;\n    }\n\n    // Nothing to do if the prompt is empty.\n    if (!prompt) {\n        return;\n    }\n\n    return makeRequest(purpose, prompt);\n};\n\n/**\n * Call to store input value\n * @param {string} purpose\n * @param {string} prompt\n * @param {array} options\n * @returns {mixed}\n */\nconst execMakeRequest = (\n    purpose,\n    prompt,\n    options\n) => fetchMany([{\n    methodname: 'local_ai_manager_post_query',\n    args: {\n        purpose,\n        prompt,\n        options\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n * @param {string} purpose\n * @param {string} prompt\n * @param {array} options\n * @returns {mixed}\n */\nexport const makeRequest = async (purpose, prompt, options = []) => {\n\n    const response = await execMakeRequest(purpose, prompt, options);\n    return response;\n\n};\n"],"names":["purpose","prompt","makeRequest","execMakeRequest","options","methodname","args","async","response"],"mappings":"mRAGoB,CAACA,QAASC,aAGrBD,SAKAC,cAIEC,YAAYF,QAASC,eAU1BE,gBAAkB,CACpBH,QACAC,OACAG,WACC,cAAU,CAAC,CACZC,WAAY,8BACZC,KAAM,CACFN,QAAAA,QACAC,OAAAA,OACAG,QAAAA,YAEJ,GASSF,YAAcK,eAAOP,QAASC,YAAQG,+DAAU,SAEnDI,eAAiBL,gBAAgBH,QAASC,OAAQG,gBACjDI"}