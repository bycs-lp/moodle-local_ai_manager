{"version":3,"file":"config.min.js","sources":["../src/config.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\n\nlet aiConfig = null;\n\n/**\n * Make request for retrieving the purpose configuration for current tenant.\n */\nconst fetchAiConfig = () => fetchMany([{\n    methodname: 'local_ai_manager_get_ai_config',\n    args: {},\n}])[0];\n\nconst fetchPurposeOptions = (\n    purpose\n) => fetchMany([{\n    methodname: 'local_ai_manager_get_purpose_options',\n    args: {\n        purpose\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n */\nexport const getAiConfig = async() => {\n    if (aiConfig === null) {\n        aiConfig = await fetchAiConfig();\n    }\n    return aiConfig;\n};\n\nexport const getPurposeOptions = async(purpose) => {\n    return await fetchPurposeOptions(purpose);\n};\n"],"names":["aiConfig","async","methodname","args","purpose","fetchPurposeOptions"],"mappings":"sMAEIA,SAAW,0BAsBYC,UACN,OAAbD,WACAA,eAnBoB,cAAU,CAAC,CACnCE,WAAY,iCACZC,KAAM,MACN,IAkBOH,qCAGsBC,MAAAA,cAlB7BG,CAAAA,UACC,cAAU,CAAC,CACZF,WAAY,uCACZC,KAAM,CACFC,QAAAA,YAEJ,GAaaC,CAAoBD"}