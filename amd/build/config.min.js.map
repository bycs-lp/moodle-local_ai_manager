{"version":3,"file":"config.min.js","sources":["../src/config.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\n\nlet aiConfig = null;\n\n/**\n * Make request for retrieving the purpose configuration for current tenant.\n *\n * @param {string} tenant the tenant identifier or null, if the tenant of the user should be used\n */\nconst fetchAiConfig = (tenant = null) => fetchMany([{\n    methodname: 'local_ai_manager_get_ai_config',\n    args: {\n        tenant\n    },\n}])[0];\n\nconst fetchPurposeOptions = (purpose) => fetchMany([{\n    methodname: 'local_ai_manager_get_purpose_options',\n    args: {\n        purpose\n    },\n}])[0];\n\n/**\n * Executes the call to store input value.\n *\n * @param {string} tenant the tenant identifier or null, if the tenant of the user should be used\n */\nexport const getAiConfig = async(tenant = null) => {\n    if (aiConfig === null) {\n        aiConfig = await fetchAiConfig(tenant);\n    }\n    return aiConfig;\n};\n\nexport const getPurposeOptions = async(purpose) => {\n    return await fetchPurposeOptions(purpose);\n};\n"],"names":["aiConfig","fetchAiConfig","tenant","methodname","args","async","purpose","fetchPurposeOptions"],"mappings":"sMAEIA,SAAW,WAOTC,cAAgB,eAACC,8DAAS,YAAS,cAAU,CAAC,CAChDC,WAAY,iCACZC,KAAM,CACFF,OAAAA,WAEJ,yBAcuBG,qBAAMH,8DAAS,YACrB,OAAbF,WACAA,eAAiBC,cAAcC,SAE5BF,qCAGsBK,MAAAA,cAnBJC,CAAAA,UAAY,cAAU,CAAC,CAChDH,WAAY,uCACZC,KAAM,CACFE,QAAAA,YAEJ,GAeaC,CAAoBD"}